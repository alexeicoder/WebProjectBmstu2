openapi: 3.0.0
info:
  title: Authentication Service API
  version: v1
  description: API for user authentication and management.

paths:
  /:
    get:
      summary: Welcome message
      description: Returns a welcome message for the Auth Service API.
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: Welcome to Auth Service API

  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request (e.g., invalid input)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (e.g., user already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/login:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad request (e.g., invalid input)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (e.g., invalid credentials)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/signout:
    post:
      summary: Sign out a user
      description: Invalidates the user's session by clearing cookies.
      responses:
        '200':
          description: User signed out successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignoutResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/validatetoken:
    get:
      summary: Validate access token
      description: Validates the provided access token.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateTokenResponse'
        '401':
          description: Unauthorized (e.g., invalid or expired token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/refresh:
    get:
      summary: Refresh access token
      description: Refreshes the access token using a refresh token.
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
        '400':
          description: Bad request (e.g., invalid refresh token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (e.g., invalid or expired refresh token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/find/user/id/{id}:
    get:
      summary: Find user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the user to retrieve
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request (e.g., invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/find/user/login/{login}:
    get:
      summary: Find user by login
      parameters:
        - in: path
          name: login
          schema:
            type: string
          required: true
          description: Login of the user to retrieve
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request (e.g., invalid login)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/find/all:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/update/user/{id}:
    put:
      summary: Update user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
        '400':
          description: Bad request (e.g., invalid input)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/delete/user/{id}:
    delete:
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the user to delete
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
        '400':
          description: Bad request (e.g., invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/exists/user/{id}:
    get:
      summary: Check if user exists by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the user to check
      responses:
        '200':
          description: User exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
        '400':
          description: Bad request (e.g., invalid ID)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        name:
          type: string
      required:
        - login
        - password
        - name
    LoginRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    UserResponse:
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        name:
          type: string
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        userId:
          type: integer
        accessToken:
          type: string
        refreshToken:
          type: string
    SignoutResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    ValidateTokenResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        userId:
          type: integer
    RefreshResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        userId:
          type: integer
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    UpdateUserRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        name:
          type: string
    UpdateUserResponse:
      type: object
      properties:
        message:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            email:
              type: string
            name:
              type: string
    DeleteUserResponse:
      type: object
      properties:
        message:
          type: string
